buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.dutaduta.sketchme'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'com.google.code.gson:gson:2.8.7'
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5") // 추가
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5") // 추가
	// 캐시
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// 기본 캐시가 ConcurrentMapCache 에서 RedisCache 로 설정됨
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// JSON
	implementation group: 'org.json', name: 'json', version: '20090211'
	// Oauth 관련 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// openvidu 라이브러리
	// https://mvnrepository.com/artifact/io.openvidu/openvidu-java-client
	implementation group: 'io.openvidu', name: 'openvidu-java-client', version: '2.28.0'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// common-io (파일 관리)
	implementation group: 'commons-io', name: 'commons-io', version: '2.13.0'


	// 썸네일
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.12'

	// imageio (여러 장의 사진을 조합해서 GIF로 만드는 라이브러리)
	implementation 'com.github.jai-imageio:jai-imageio-core:1.3.0'

	implementation 'org.apache.httpcomponents:httpcore:4.4.15'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'


	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.bootJar {
	// JAR 파일 이름 설정
	archiveFileName.set("test-server.jar")
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}


